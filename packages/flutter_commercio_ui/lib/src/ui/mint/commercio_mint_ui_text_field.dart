import 'package:flutter/material.dart';
import 'package:flutter_commercio_ui/flutter_commercio_ui.dart';

class DeriveMintCccTextField extends CommercioTextField<
    CommercioDeriveMintCCCBloc,
    CommercioDeriveMintCCCEvent,
    CommercioMintDeriveCCCState,
    CommercioMintDeriveCCCStateInitial,
    CommercioMintDeriveCCCStateData,
    CommercioMintDeriveCCCStateLoading,
    CommercioMintDeriveCCCStateError> {
  DeriveMintCccTextField({
    required String Function(
            BuildContext context, CommercioMintDeriveCCCState state)
        text,
    TextEditingController? controller,
    FocusNode? focusNode,
    bool autofocus = false,
    ValueChanged<String>? onChanged,
    VoidCallback? onEditingComplete,
    ValueChanged<String>? onSubmitted,
    AppPrivateCommandCallback? onAppPrivateCommand,
    bool? enabled,
    VoidCallback? onTap,
    String Function(BuildContext context)? loading,
    String Function(BuildContext context, String errorMessage)? error,
    CommercioTextFieldStyle? textFieldStyle,
    CommercioTextFieldStyle? textFieldLoadingStyle,
    String? restorationId,
    Key? key,
  }) : super(
          key: key,
          text: text,
          autofocus: autofocus,
          controller: controller,
          enabled: enabled,
          error: error,
          focusNode: focusNode,
          loading: loading,
          onAppPrivateCommand: onAppPrivateCommand,
          onChanged: onChanged,
          onEditingComplete: onEditingComplete,
          onSubmitted: onSubmitted,
          onTap: onTap,
          restorationId: restorationId,
          textFieldLoadingStyle: textFieldLoadingStyle,
          textFieldStyle: textFieldStyle,
        );
}

class MintCccTextField extends CommercioTextField<
    CommercioMintCCCBloc,
    CommercioMintCCCEvent,
    CommercioMintMintedCCCState,
    CommercioMintMintedCCCStateInitial,
    CommercioMintMintedCCCStateData,
    CommercioMintMintedCCCStateLoading,
    CommercioMintMintedCCCStateError> {
  MintCccTextField({
    required String Function(
            BuildContext context, CommercioMintMintedCCCState state)
        text,
    TextEditingController? controller,
    FocusNode? focusNode,
    bool autofocus = false,
    ValueChanged<String>? onChanged,
    VoidCallback? onEditingComplete,
    ValueChanged<String>? onSubmitted,
    AppPrivateCommandCallback? onAppPrivateCommand,
    bool? enabled,
    VoidCallback? onTap,
    String Function(BuildContext context)? loading,
    String Function(BuildContext context, String errorMessage)? error,
    CommercioTextFieldStyle? textFieldStyle,
    CommercioTextFieldStyle? textFieldLoadingStyle,
    String? restorationId,
    Key? key,
  }) : super(
          key: key,
          text: text,
          autofocus: autofocus,
          controller: controller,
          enabled: enabled,
          error: error,
          focusNode: focusNode,
          loading: loading,
          onAppPrivateCommand: onAppPrivateCommand,
          onChanged: onChanged,
          onEditingComplete: onEditingComplete,
          onSubmitted: onSubmitted,
          onTap: onTap,
          restorationId: restorationId,
          textFieldLoadingStyle: textFieldLoadingStyle,
          textFieldStyle: textFieldStyle,
        );
}

class DeriveBurnCccTextField extends CommercioTextField<
    CommercioMintDeriveBurnCccBloc,
    CommercioMintDeriveBurnCCCEvent,
    CommercioMintDeriveBurnCCCState,
    CommercioMintDeriveBurnCCCStateInitial,
    CommercioMintDeriveBurnCCCStateData,
    CommercioMintDeriveBurnCCCStateLoading,
    CommercioMintDeriveBurnCCCStateError> {
  DeriveBurnCccTextField({
    required String Function(
            BuildContext context, CommercioMintDeriveBurnCCCState state)
        text,
    TextEditingController? controller,
    FocusNode? focusNode,
    bool autofocus = false,
    ValueChanged<String>? onChanged,
    VoidCallback? onEditingComplete,
    ValueChanged<String>? onSubmitted,
    AppPrivateCommandCallback? onAppPrivateCommand,
    bool? enabled,
    VoidCallback? onTap,
    String Function(BuildContext context)? loading,
    String Function(BuildContext context, String errorMessage)? error,
    CommercioTextFieldStyle? textFieldStyle,
    CommercioTextFieldStyle? textFieldLoadingStyle,
    String? restorationId,
    Key? key,
  }) : super(
          key: key,
          text: text,
          autofocus: autofocus,
          controller: controller,
          enabled: enabled,
          error: error,
          focusNode: focusNode,
          loading: loading,
          onAppPrivateCommand: onAppPrivateCommand,
          onChanged: onChanged,
          onEditingComplete: onEditingComplete,
          onSubmitted: onSubmitted,
          onTap: onTap,
          restorationId: restorationId,
          textFieldLoadingStyle: textFieldLoadingStyle,
          textFieldStyle: textFieldStyle,
        );
}

class BurnCccTextField extends CommercioTextField<
    CommercioMintBurnCccBloc,
    CommercioMintBurnCCCEvent,
    CommercioMintBurnCCCState,
    CommercioMintBurnCCCStateInitial,
    CommercioMintBurnCCCStateData,
    CommercioMintBurnCCCStateLoading,
    CommercioMintBurnCCCStateError> {
  BurnCccTextField({
    required String Function(
            BuildContext context, CommercioMintBurnCCCState state)
        text,
    TextEditingController? controller,
    FocusNode? focusNode,
    bool autofocus = false,
    ValueChanged<String>? onChanged,
    VoidCallback? onEditingComplete,
    ValueChanged<String>? onSubmitted,
    AppPrivateCommandCallback? onAppPrivateCommand,
    bool? enabled,
    VoidCallback? onTap,
    String Function(BuildContext context)? loading,
    String Function(BuildContext context, String errorMessage)? error,
    CommercioTextFieldStyle? textFieldStyle,
    CommercioTextFieldStyle? textFieldLoadingStyle,
    String? restorationId,
    Key? key,
  }) : super(
          key: key,
          text: text,
          autofocus: autofocus,
          controller: controller,
          enabled: enabled,
          error: error,
          focusNode: focusNode,
          loading: loading,
          onAppPrivateCommand: onAppPrivateCommand,
          onChanged: onChanged,
          onEditingComplete: onEditingComplete,
          onSubmitted: onSubmitted,
          onTap: onTap,
          restorationId: restorationId,
          textFieldLoadingStyle: textFieldLoadingStyle,
          textFieldStyle: textFieldStyle,
        );
}

class GetExchangeTradePositionsTextField extends CommercioTextField<
    CommercioMintGetExchangeTradePositionsBloc,
    CommercioMintGetExchangeTradePositionsEvent,
    CommercioMintGetExchangeTradePositionsState,
    CommercioMintGetExchangeTradePositionsStateInitial,
    CommercioMintGetExchangeTradePositionsStateData,
    CommercioMintGetExchangeTradePositionsStateLoading,
    CommercioMintGetExchangeTradePositionsStateError> {
  GetExchangeTradePositionsTextField({
    required String Function(BuildContext context,
            CommercioMintGetExchangeTradePositionsState state)
        text,
    TextEditingController? controller,
    FocusNode? focusNode,
    bool autofocus = false,
    ValueChanged<String>? onChanged,
    VoidCallback? onEditingComplete,
    ValueChanged<String>? onSubmitted,
    AppPrivateCommandCallback? onAppPrivateCommand,
    bool? enabled,
    VoidCallback? onTap,
    String Function(BuildContext context)? loading,
    String Function(BuildContext context, String errorMessage)? error,
    CommercioTextFieldStyle? textFieldStyle,
    CommercioTextFieldStyle? textFieldLoadingStyle,
    String? restorationId,
    Key? key,
  }) : super(
          key: key,
          text: text,
          autofocus: autofocus,
          controller: controller,
          enabled: enabled,
          error: error,
          focusNode: focusNode,
          loading: loading,
          onAppPrivateCommand: onAppPrivateCommand,
          onChanged: onChanged,
          onEditingComplete: onEditingComplete,
          onSubmitted: onSubmitted,
          onTap: onTap,
          restorationId: restorationId,
          textFieldLoadingStyle: textFieldLoadingStyle,
          textFieldStyle: textFieldStyle,
        );
}
